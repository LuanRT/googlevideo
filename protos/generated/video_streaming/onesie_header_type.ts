// Code generated by protoc-gen-ts_proto. DO NOT EDIT.
// versions:
//   protoc-gen-ts_proto  v2.2.0
//   protoc               v5.28.0
// source: video_streaming/onesie_header_type.proto

/* eslint-disable */

export const protobufPackage = "video_streaming";

export enum OnesieHeaderType {
  ONESIE_PLAYER_RESPONSE = 0,
  MEDIA = 1,
  MEDIA_DECRYPTION_KEY = 2,
  CLEAR_MEDIA = 3,
  CLEAR_INIT_SEGMENT = 4,
  ACK = 5,
  MEDIA_STREAMER_HOSTNAME = 6,
  MEDIA_SIZE_HINT = 7,
  PLAYER_SERVICE_RESPONSE_PUSH_URL = 8,
  LAST_HIGH_PRIORITY_HINT = 9,
  STREAM_METADATA = 16,
  ENCRYPTED_INNERTUBE_RESPONSE_PART = 25,
  UNRECOGNIZED = -1,
}

export function onesieHeaderTypeFromJSON(object: any): OnesieHeaderType {
  switch (object) {
    case 0:
    case "ONESIE_PLAYER_RESPONSE":
      return OnesieHeaderType.ONESIE_PLAYER_RESPONSE;
    case 1:
    case "MEDIA":
      return OnesieHeaderType.MEDIA;
    case 2:
    case "MEDIA_DECRYPTION_KEY":
      return OnesieHeaderType.MEDIA_DECRYPTION_KEY;
    case 3:
    case "CLEAR_MEDIA":
      return OnesieHeaderType.CLEAR_MEDIA;
    case 4:
    case "CLEAR_INIT_SEGMENT":
      return OnesieHeaderType.CLEAR_INIT_SEGMENT;
    case 5:
    case "ACK":
      return OnesieHeaderType.ACK;
    case 6:
    case "MEDIA_STREAMER_HOSTNAME":
      return OnesieHeaderType.MEDIA_STREAMER_HOSTNAME;
    case 7:
    case "MEDIA_SIZE_HINT":
      return OnesieHeaderType.MEDIA_SIZE_HINT;
    case 8:
    case "PLAYER_SERVICE_RESPONSE_PUSH_URL":
      return OnesieHeaderType.PLAYER_SERVICE_RESPONSE_PUSH_URL;
    case 9:
    case "LAST_HIGH_PRIORITY_HINT":
      return OnesieHeaderType.LAST_HIGH_PRIORITY_HINT;
    case 16:
    case "STREAM_METADATA":
      return OnesieHeaderType.STREAM_METADATA;
    case 25:
    case "ENCRYPTED_INNERTUBE_RESPONSE_PART":
      return OnesieHeaderType.ENCRYPTED_INNERTUBE_RESPONSE_PART;
    case -1:
    case "UNRECOGNIZED":
    default:
      return OnesieHeaderType.UNRECOGNIZED;
  }
}

export function onesieHeaderTypeToJSON(object: OnesieHeaderType): string {
  switch (object) {
    case OnesieHeaderType.ONESIE_PLAYER_RESPONSE:
      return "ONESIE_PLAYER_RESPONSE";
    case OnesieHeaderType.MEDIA:
      return "MEDIA";
    case OnesieHeaderType.MEDIA_DECRYPTION_KEY:
      return "MEDIA_DECRYPTION_KEY";
    case OnesieHeaderType.CLEAR_MEDIA:
      return "CLEAR_MEDIA";
    case OnesieHeaderType.CLEAR_INIT_SEGMENT:
      return "CLEAR_INIT_SEGMENT";
    case OnesieHeaderType.ACK:
      return "ACK";
    case OnesieHeaderType.MEDIA_STREAMER_HOSTNAME:
      return "MEDIA_STREAMER_HOSTNAME";
    case OnesieHeaderType.MEDIA_SIZE_HINT:
      return "MEDIA_SIZE_HINT";
    case OnesieHeaderType.PLAYER_SERVICE_RESPONSE_PUSH_URL:
      return "PLAYER_SERVICE_RESPONSE_PUSH_URL";
    case OnesieHeaderType.LAST_HIGH_PRIORITY_HINT:
      return "LAST_HIGH_PRIORITY_HINT";
    case OnesieHeaderType.STREAM_METADATA:
      return "STREAM_METADATA";
    case OnesieHeaderType.ENCRYPTED_INNERTUBE_RESPONSE_PART:
      return "ENCRYPTED_INNERTUBE_RESPONSE_PART";
    case OnesieHeaderType.UNRECOGNIZED:
    default:
      return "UNRECOGNIZED";
  }
}
